// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/commands.proto

package org.apache.spark.connect.proto;

/**
 * Protobuf type {@code spark.connect.StreamingForeachWriter}
 */
public final class StreamingForeachWriter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:spark.connect.StreamingForeachWriter)
    StreamingForeachWriterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StreamingForeachWriter.newBuilder() to construct.
  private StreamingForeachWriter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StreamingForeachWriter() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StreamingForeachWriter();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingForeachWriter_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingForeachWriter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.apache.spark.connect.proto.StreamingForeachWriter.class, org.apache.spark.connect.proto.StreamingForeachWriter.Builder.class);
  }

  private int writerCase_ = 0;
  @SuppressWarnings("serial")
  private java.lang.Object writer_;
  public enum WriterCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    PYTHON_WRITER(1),
    SCALA_WRITER(2),
    WRITER_NOT_SET(0);
    private final int value;
    private WriterCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WriterCase valueOf(int value) {
      return forNumber(value);
    }

    public static WriterCase forNumber(int value) {
      switch (value) {
        case 1: return PYTHON_WRITER;
        case 2: return SCALA_WRITER;
        case 0: return WRITER_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public WriterCase
  getWriterCase() {
    return WriterCase.forNumber(
        writerCase_);
  }

  public static final int PYTHON_WRITER_FIELD_NUMBER = 1;
  /**
   * <code>.spark.connect.PythonUDF python_writer = 1;</code>
   * @return Whether the pythonWriter field is set.
   */
  @java.lang.Override
  public boolean hasPythonWriter() {
    return writerCase_ == 1;
  }
  /**
   * <code>.spark.connect.PythonUDF python_writer = 1;</code>
   * @return The pythonWriter.
   */
  @java.lang.Override
  public org.apache.spark.connect.proto.PythonUDF getPythonWriter() {
    if (writerCase_ == 1) {
       return (org.apache.spark.connect.proto.PythonUDF) writer_;
    }
    return org.apache.spark.connect.proto.PythonUDF.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.PythonUDF python_writer = 1;</code>
   */
  @java.lang.Override
  public org.apache.spark.connect.proto.PythonUDFOrBuilder getPythonWriterOrBuilder() {
    if (writerCase_ == 1) {
       return (org.apache.spark.connect.proto.PythonUDF) writer_;
    }
    return org.apache.spark.connect.proto.PythonUDF.getDefaultInstance();
  }

  public static final int SCALA_WRITER_FIELD_NUMBER = 2;
  /**
   * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
   * @return Whether the scalaWriter field is set.
   */
  @java.lang.Override
  public boolean hasScalaWriter() {
    return writerCase_ == 2;
  }
  /**
   * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
   * @return The scalaWriter.
   */
  @java.lang.Override
  public org.apache.spark.connect.proto.ScalarScalaUDF getScalaWriter() {
    if (writerCase_ == 2) {
       return (org.apache.spark.connect.proto.ScalarScalaUDF) writer_;
    }
    return org.apache.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
  }
  /**
   * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
   */
  @java.lang.Override
  public org.apache.spark.connect.proto.ScalarScalaUDFOrBuilder getScalaWriterOrBuilder() {
    if (writerCase_ == 2) {
       return (org.apache.spark.connect.proto.ScalarScalaUDF) writer_;
    }
    return org.apache.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (writerCase_ == 1) {
      output.writeMessage(1, (org.apache.spark.connect.proto.PythonUDF) writer_);
    }
    if (writerCase_ == 2) {
      output.writeMessage(2, (org.apache.spark.connect.proto.ScalarScalaUDF) writer_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (writerCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.apache.spark.connect.proto.PythonUDF) writer_);
    }
    if (writerCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.apache.spark.connect.proto.ScalarScalaUDF) writer_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.apache.spark.connect.proto.StreamingForeachWriter)) {
      return super.equals(obj);
    }
    org.apache.spark.connect.proto.StreamingForeachWriter other = (org.apache.spark.connect.proto.StreamingForeachWriter) obj;

    if (!getWriterCase().equals(other.getWriterCase())) return false;
    switch (writerCase_) {
      case 1:
        if (!getPythonWriter()
            .equals(other.getPythonWriter())) return false;
        break;
      case 2:
        if (!getScalaWriter()
            .equals(other.getScalaWriter())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    switch (writerCase_) {
      case 1:
        hash = (37 * hash) + PYTHON_WRITER_FIELD_NUMBER;
        hash = (53 * hash) + getPythonWriter().hashCode();
        break;
      case 2:
        hash = (37 * hash) + SCALA_WRITER_FIELD_NUMBER;
        hash = (53 * hash) + getScalaWriter().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static org.apache.spark.connect.proto.StreamingForeachWriter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static org.apache.spark.connect.proto.StreamingForeachWriter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.apache.spark.connect.proto.StreamingForeachWriter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.apache.spark.connect.proto.StreamingForeachWriter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code spark.connect.StreamingForeachWriter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:spark.connect.StreamingForeachWriter)
      org.apache.spark.connect.proto.StreamingForeachWriterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingForeachWriter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingForeachWriter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.spark.connect.proto.StreamingForeachWriter.class, org.apache.spark.connect.proto.StreamingForeachWriter.Builder.class);
    }

    // Construct using org.apache.spark.connect.proto.StreamingForeachWriter.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      if (pythonWriterBuilder_ != null) {
        pythonWriterBuilder_.clear();
      }
      if (scalaWriterBuilder_ != null) {
        scalaWriterBuilder_.clear();
      }
      writerCase_ = 0;
      writer_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.apache.spark.connect.proto.Commands.internal_static_spark_connect_StreamingForeachWriter_descriptor;
    }

    @java.lang.Override
    public org.apache.spark.connect.proto.StreamingForeachWriter getDefaultInstanceForType() {
      return org.apache.spark.connect.proto.StreamingForeachWriter.getDefaultInstance();
    }

    @java.lang.Override
    public org.apache.spark.connect.proto.StreamingForeachWriter build() {
      org.apache.spark.connect.proto.StreamingForeachWriter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.apache.spark.connect.proto.StreamingForeachWriter buildPartial() {
      org.apache.spark.connect.proto.StreamingForeachWriter result = new org.apache.spark.connect.proto.StreamingForeachWriter(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      buildPartialOneofs(result);
      onBuilt();
      return result;
    }

    private void buildPartial0(org.apache.spark.connect.proto.StreamingForeachWriter result) {
      int from_bitField0_ = bitField0_;
    }

    private void buildPartialOneofs(org.apache.spark.connect.proto.StreamingForeachWriter result) {
      result.writerCase_ = writerCase_;
      result.writer_ = this.writer_;
      if (writerCase_ == 1 &&
          pythonWriterBuilder_ != null) {
        result.writer_ = pythonWriterBuilder_.build();
      }
      if (writerCase_ == 2 &&
          scalaWriterBuilder_ != null) {
        result.writer_ = scalaWriterBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.apache.spark.connect.proto.StreamingForeachWriter) {
        return mergeFrom((org.apache.spark.connect.proto.StreamingForeachWriter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.apache.spark.connect.proto.StreamingForeachWriter other) {
      if (other == org.apache.spark.connect.proto.StreamingForeachWriter.getDefaultInstance()) return this;
      switch (other.getWriterCase()) {
        case PYTHON_WRITER: {
          mergePythonWriter(other.getPythonWriter());
          break;
        }
        case SCALA_WRITER: {
          mergeScalaWriter(other.getScalaWriter());
          break;
        }
        case WRITER_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getPythonWriterFieldBuilder().getBuilder(),
                  extensionRegistry);
              writerCase_ = 1;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getScalaWriterFieldBuilder().getBuilder(),
                  extensionRegistry);
              writerCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int writerCase_ = 0;
    private java.lang.Object writer_;
    public WriterCase
        getWriterCase() {
      return WriterCase.forNumber(
          writerCase_);
    }

    public Builder clearWriter() {
      writerCase_ = 0;
      writer_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.PythonUDF, org.apache.spark.connect.proto.PythonUDF.Builder, org.apache.spark.connect.proto.PythonUDFOrBuilder> pythonWriterBuilder_;
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     * @return Whether the pythonWriter field is set.
     */
    @java.lang.Override
    public boolean hasPythonWriter() {
      return writerCase_ == 1;
    }
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     * @return The pythonWriter.
     */
    @java.lang.Override
    public org.apache.spark.connect.proto.PythonUDF getPythonWriter() {
      if (pythonWriterBuilder_ == null) {
        if (writerCase_ == 1) {
          return (org.apache.spark.connect.proto.PythonUDF) writer_;
        }
        return org.apache.spark.connect.proto.PythonUDF.getDefaultInstance();
      } else {
        if (writerCase_ == 1) {
          return pythonWriterBuilder_.getMessage();
        }
        return org.apache.spark.connect.proto.PythonUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     */
    public Builder setPythonWriter(org.apache.spark.connect.proto.PythonUDF value) {
      if (pythonWriterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        writer_ = value;
        onChanged();
      } else {
        pythonWriterBuilder_.setMessage(value);
      }
      writerCase_ = 1;
      return this;
    }
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     */
    public Builder setPythonWriter(
        org.apache.spark.connect.proto.PythonUDF.Builder builderForValue) {
      if (pythonWriterBuilder_ == null) {
        writer_ = builderForValue.build();
        onChanged();
      } else {
        pythonWriterBuilder_.setMessage(builderForValue.build());
      }
      writerCase_ = 1;
      return this;
    }
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     */
    public Builder mergePythonWriter(org.apache.spark.connect.proto.PythonUDF value) {
      if (pythonWriterBuilder_ == null) {
        if (writerCase_ == 1 &&
            writer_ != org.apache.spark.connect.proto.PythonUDF.getDefaultInstance()) {
          writer_ = org.apache.spark.connect.proto.PythonUDF.newBuilder((org.apache.spark.connect.proto.PythonUDF) writer_)
              .mergeFrom(value).buildPartial();
        } else {
          writer_ = value;
        }
        onChanged();
      } else {
        if (writerCase_ == 1) {
          pythonWriterBuilder_.mergeFrom(value);
        } else {
          pythonWriterBuilder_.setMessage(value);
        }
      }
      writerCase_ = 1;
      return this;
    }
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     */
    public Builder clearPythonWriter() {
      if (pythonWriterBuilder_ == null) {
        if (writerCase_ == 1) {
          writerCase_ = 0;
          writer_ = null;
          onChanged();
        }
      } else {
        if (writerCase_ == 1) {
          writerCase_ = 0;
          writer_ = null;
        }
        pythonWriterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     */
    public org.apache.spark.connect.proto.PythonUDF.Builder getPythonWriterBuilder() {
      return getPythonWriterFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     */
    @java.lang.Override
    public org.apache.spark.connect.proto.PythonUDFOrBuilder getPythonWriterOrBuilder() {
      if ((writerCase_ == 1) && (pythonWriterBuilder_ != null)) {
        return pythonWriterBuilder_.getMessageOrBuilder();
      } else {
        if (writerCase_ == 1) {
          return (org.apache.spark.connect.proto.PythonUDF) writer_;
        }
        return org.apache.spark.connect.proto.PythonUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.PythonUDF python_writer = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.PythonUDF, org.apache.spark.connect.proto.PythonUDF.Builder, org.apache.spark.connect.proto.PythonUDFOrBuilder> 
        getPythonWriterFieldBuilder() {
      if (pythonWriterBuilder_ == null) {
        if (!(writerCase_ == 1)) {
          writer_ = org.apache.spark.connect.proto.PythonUDF.getDefaultInstance();
        }
        pythonWriterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.spark.connect.proto.PythonUDF, org.apache.spark.connect.proto.PythonUDF.Builder, org.apache.spark.connect.proto.PythonUDFOrBuilder>(
                (org.apache.spark.connect.proto.PythonUDF) writer_,
                getParentForChildren(),
                isClean());
        writer_ = null;
      }
      writerCase_ = 1;
      onChanged();
      return pythonWriterBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.ScalarScalaUDF, org.apache.spark.connect.proto.ScalarScalaUDF.Builder, org.apache.spark.connect.proto.ScalarScalaUDFOrBuilder> scalaWriterBuilder_;
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     * @return Whether the scalaWriter field is set.
     */
    @java.lang.Override
    public boolean hasScalaWriter() {
      return writerCase_ == 2;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     * @return The scalaWriter.
     */
    @java.lang.Override
    public org.apache.spark.connect.proto.ScalarScalaUDF getScalaWriter() {
      if (scalaWriterBuilder_ == null) {
        if (writerCase_ == 2) {
          return (org.apache.spark.connect.proto.ScalarScalaUDF) writer_;
        }
        return org.apache.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
      } else {
        if (writerCase_ == 2) {
          return scalaWriterBuilder_.getMessage();
        }
        return org.apache.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     */
    public Builder setScalaWriter(org.apache.spark.connect.proto.ScalarScalaUDF value) {
      if (scalaWriterBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        writer_ = value;
        onChanged();
      } else {
        scalaWriterBuilder_.setMessage(value);
      }
      writerCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     */
    public Builder setScalaWriter(
        org.apache.spark.connect.proto.ScalarScalaUDF.Builder builderForValue) {
      if (scalaWriterBuilder_ == null) {
        writer_ = builderForValue.build();
        onChanged();
      } else {
        scalaWriterBuilder_.setMessage(builderForValue.build());
      }
      writerCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     */
    public Builder mergeScalaWriter(org.apache.spark.connect.proto.ScalarScalaUDF value) {
      if (scalaWriterBuilder_ == null) {
        if (writerCase_ == 2 &&
            writer_ != org.apache.spark.connect.proto.ScalarScalaUDF.getDefaultInstance()) {
          writer_ = org.apache.spark.connect.proto.ScalarScalaUDF.newBuilder((org.apache.spark.connect.proto.ScalarScalaUDF) writer_)
              .mergeFrom(value).buildPartial();
        } else {
          writer_ = value;
        }
        onChanged();
      } else {
        if (writerCase_ == 2) {
          scalaWriterBuilder_.mergeFrom(value);
        } else {
          scalaWriterBuilder_.setMessage(value);
        }
      }
      writerCase_ = 2;
      return this;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     */
    public Builder clearScalaWriter() {
      if (scalaWriterBuilder_ == null) {
        if (writerCase_ == 2) {
          writerCase_ = 0;
          writer_ = null;
          onChanged();
        }
      } else {
        if (writerCase_ == 2) {
          writerCase_ = 0;
          writer_ = null;
        }
        scalaWriterBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     */
    public org.apache.spark.connect.proto.ScalarScalaUDF.Builder getScalaWriterBuilder() {
      return getScalaWriterFieldBuilder().getBuilder();
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     */
    @java.lang.Override
    public org.apache.spark.connect.proto.ScalarScalaUDFOrBuilder getScalaWriterOrBuilder() {
      if ((writerCase_ == 2) && (scalaWriterBuilder_ != null)) {
        return scalaWriterBuilder_.getMessageOrBuilder();
      } else {
        if (writerCase_ == 2) {
          return (org.apache.spark.connect.proto.ScalarScalaUDF) writer_;
        }
        return org.apache.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
      }
    }
    /**
     * <code>.spark.connect.ScalarScalaUDF scala_writer = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.apache.spark.connect.proto.ScalarScalaUDF, org.apache.spark.connect.proto.ScalarScalaUDF.Builder, org.apache.spark.connect.proto.ScalarScalaUDFOrBuilder> 
        getScalaWriterFieldBuilder() {
      if (scalaWriterBuilder_ == null) {
        if (!(writerCase_ == 2)) {
          writer_ = org.apache.spark.connect.proto.ScalarScalaUDF.getDefaultInstance();
        }
        scalaWriterBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.apache.spark.connect.proto.ScalarScalaUDF, org.apache.spark.connect.proto.ScalarScalaUDF.Builder, org.apache.spark.connect.proto.ScalarScalaUDFOrBuilder>(
                (org.apache.spark.connect.proto.ScalarScalaUDF) writer_,
                getParentForChildren(),
                isClean());
        writer_ = null;
      }
      writerCase_ = 2;
      onChanged();
      return scalaWriterBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:spark.connect.StreamingForeachWriter)
  }

  // @@protoc_insertion_point(class_scope:spark.connect.StreamingForeachWriter)
  private static final org.apache.spark.connect.proto.StreamingForeachWriter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.apache.spark.connect.proto.StreamingForeachWriter();
  }

  public static org.apache.spark.connect.proto.StreamingForeachWriter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StreamingForeachWriter>
      PARSER = new com.google.protobuf.AbstractParser<StreamingForeachWriter>() {
    @java.lang.Override
    public StreamingForeachWriter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StreamingForeachWriter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StreamingForeachWriter> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.apache.spark.connect.proto.StreamingForeachWriter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

