// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: spark/connect/relations.proto

package org.apache.spark.connect.proto;

public interface GroupMapOrBuilder extends
    // @@protoc_insertion_point(interface_extends:spark.connect.GroupMap)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * (Required) Input relation for Group Map API: apply, applyInPandas.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return Whether the input field is set.
   */
  boolean hasInput();
  /**
   * <pre>
   * (Required) Input relation for Group Map API: apply, applyInPandas.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   * @return The input.
   */
  org.apache.spark.connect.proto.Relation getInput();
  /**
   * <pre>
   * (Required) Input relation for Group Map API: apply, applyInPandas.
   * </pre>
   *
   * <code>.spark.connect.Relation input = 1;</code>
   */
  org.apache.spark.connect.proto.RelationOrBuilder getInputOrBuilder();

  /**
   * <pre>
   * (Required) Expressions for grouping keys.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression grouping_expressions = 2;</code>
   */
  java.util.List<org.apache.spark.connect.proto.Expression> 
      getGroupingExpressionsList();
  /**
   * <pre>
   * (Required) Expressions for grouping keys.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression grouping_expressions = 2;</code>
   */
  org.apache.spark.connect.proto.Expression getGroupingExpressions(int index);
  /**
   * <pre>
   * (Required) Expressions for grouping keys.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression grouping_expressions = 2;</code>
   */
  int getGroupingExpressionsCount();
  /**
   * <pre>
   * (Required) Expressions for grouping keys.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression grouping_expressions = 2;</code>
   */
  java.util.List<? extends org.apache.spark.connect.proto.ExpressionOrBuilder> 
      getGroupingExpressionsOrBuilderList();
  /**
   * <pre>
   * (Required) Expressions for grouping keys.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression grouping_expressions = 2;</code>
   */
  org.apache.spark.connect.proto.ExpressionOrBuilder getGroupingExpressionsOrBuilder(
      int index);

  /**
   * <pre>
   * (Required) Input user-defined function.
   * </pre>
   *
   * <code>.spark.connect.CommonInlineUserDefinedFunction func = 3;</code>
   * @return Whether the func field is set.
   */
  boolean hasFunc();
  /**
   * <pre>
   * (Required) Input user-defined function.
   * </pre>
   *
   * <code>.spark.connect.CommonInlineUserDefinedFunction func = 3;</code>
   * @return The func.
   */
  org.apache.spark.connect.proto.CommonInlineUserDefinedFunction getFunc();
  /**
   * <pre>
   * (Required) Input user-defined function.
   * </pre>
   *
   * <code>.spark.connect.CommonInlineUserDefinedFunction func = 3;</code>
   */
  org.apache.spark.connect.proto.CommonInlineUserDefinedFunctionOrBuilder getFuncOrBuilder();

  /**
   * <pre>
   * (Optional) Expressions for sorting. Only used by Scala Sorted Group Map API.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression sorting_expressions = 4;</code>
   */
  java.util.List<org.apache.spark.connect.proto.Expression> 
      getSortingExpressionsList();
  /**
   * <pre>
   * (Optional) Expressions for sorting. Only used by Scala Sorted Group Map API.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression sorting_expressions = 4;</code>
   */
  org.apache.spark.connect.proto.Expression getSortingExpressions(int index);
  /**
   * <pre>
   * (Optional) Expressions for sorting. Only used by Scala Sorted Group Map API.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression sorting_expressions = 4;</code>
   */
  int getSortingExpressionsCount();
  /**
   * <pre>
   * (Optional) Expressions for sorting. Only used by Scala Sorted Group Map API.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression sorting_expressions = 4;</code>
   */
  java.util.List<? extends org.apache.spark.connect.proto.ExpressionOrBuilder> 
      getSortingExpressionsOrBuilderList();
  /**
   * <pre>
   * (Optional) Expressions for sorting. Only used by Scala Sorted Group Map API.
   * </pre>
   *
   * <code>repeated .spark.connect.Expression sorting_expressions = 4;</code>
   */
  org.apache.spark.connect.proto.ExpressionOrBuilder getSortingExpressionsOrBuilder(
      int index);
}
